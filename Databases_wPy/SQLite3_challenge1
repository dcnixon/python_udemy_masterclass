-- View Schema for reference in queries
CREATE VIEW artist_list AS
    SELECT artists.name AS artist, albums.name AS album, songs.track, songs.title FROM songs
    INNER JOIN albums ON songs.album = albums._id
    INNER JOIN artists ON albums.artist = artists._id
    ORDER BY artists.name, albums.name, songs.track;


-- 1. Titles of all songs of Album "Forbidden"
-- Using the view
SELECT track, title FROM artist_list
    WHERE album LIKE "Forbidden";

    -- Using Tables
    SELECT songs.track, songs.title
    FROM songs
    INNER JOIN albums ON songs.album = albums._id WHERE albums.name = "Forbidden";


-- 2. Repeat in track order
SELECT title FROM artist_list
    WHERE album LIKE "Forbidden"
    ORDER BY track ASC;

    -- Using Tables
    SELECT songs.track, songs.title
    FROM songs
    INNER JOIN albums ON songs.album = albums._id
    WHERE albums.name = "Forbidden"
    ORDER BY songs.track;


-- 3. all songs for band "Deep Purple"
SELECT title FROM artist_list
    WHERE artist LIKE "Deep Purple";

    -- Using Tables
    SELECT songs.title
    FROM songs
    INNER JOIN albums ON songs.album = albums._id
    INNER JOIN artists ON albums.artist = artists._id
    WHERE artists.name = "Deep Purple";


-- 4. Rename the band "Mehitabel to "One Kitten"
UPDATE artists SET name = "One Kitten"
    WHERE name = "Mehitabel";


-- 5. Check rename worked
SELECT title FROM artist_list
    WHERE artist = "One Kitten";


-- 6. titles of all songs by Aerosmith in alphabetical order
SELECT title FROM artist_list
    WHERE artist LIKE "Aerosmith"
    ORDER BY title;

    -- Using tables
   SELECT songs.title
   FROM songs
   INNER JOIN albums ON songs.album = albums._id
   INNER JOIN artists ON albums.artist = artists._id
   WHERE artists.name = "Aerosmith"
   ORDER BY songs.title;


-- 7. count(title) of the previous

SELECT count(title) FROM artist_list
    WHERE artist LIKE "Aerosmith";

    -- Using tables
   SELECT count(songs.title)
   FROM songs
   INNER JOIN albums ON songs.album = albums._id
   INNER JOIN artists ON albums.artist = artists._id
   WHERE artists.name = "Aerosmith"
   ORDER BY songs.title;


-- 8. get list of 6. with no duplicates

SELECT DISTINCT title FROM artist_list
    WHERE artist LIKE "Aerosmith"
    ORDER BY title;

    -- Using tables
   SELECT DISTINCT songs.title
   FROM songs
   INNER JOIN albums ON songs.album = albums._id
   INNER JOIN artists ON albums.artist = artists._id
   WHERE artists.name = "Aerosmith"
   ORDER BY songs.title;


-- 9. get count with no duplicates

SELECT count(DISTINCT title) FROM artist_list
    WHERE artist LIKE "Aerosmith";

    -- Using tables
   SELECT count(DISTINCT songs.title)
   FROM songs
   INNER JOIN albums ON songs.album = albums._id
   INNER JOIN artists ON albums.artist = artists._id
   WHERE artists.name = "Aerosmith"
   ORDER BY songs.title;

-- 10. Repeat previous query to find the number of artists (1) and albums (??)

SELECT count(DISTINCT title), count(DISTINCT artist), count(DISTINCT album) FROM artist_list
    WHERE artist LIKE "Aerosmith";

    -- Using tables
   SELECT count(DISTINCT songs.title), count(DISTINCT artists.name), count(DISTINCT albums.name)
   FROM songs
   INNER JOIN albums ON songs.album = albums._id
   INNER JOIN artists ON albums.artist = artists._id
   WHERE artists.name = "Aerosmith"
   ORDER BY songs.title;